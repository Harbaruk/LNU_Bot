<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telebot</name>
    </assembly>
    <members>
        <member name="M:Taikandi.Telebot.HttpRequestException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.HttpRequestException"/> class.
            </summary>
            <param name="message">A message that describes the current exception.</param>
        </member>
        <member name="M:Taikandi.Telebot.HttpRequestException.#ctor(System.Net.Http.HttpResponseMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.HttpRequestException"/> class.
            </summary>
            <param name="responseMessage">The response message.</param>
        </member>
        <member name="M:Taikandi.Telebot.HttpRequestException.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.HttpRequestException"/> class.
            </summary>
            <param name="statusCode">The status code.</param>
            <param name="reasonPhrase">The reason phrase.</param>
        </member>
        <member name="M:Taikandi.Telebot.MultipartFormDataContentExtensions.Add``1(System.Net.Http.MultipartFormDataContent,System.String,``0,System.String)">
            <summary>
            Add HTTP content to a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized to
            multipart/form-data MIME type.
            </summary>
            <typeparam name="T">Type of the content to add.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.MultipartFormDataContent" /> object to extend.</param>
            <param name="name">The name for the HTTP content to add.</param>
            <param name="value">The content to add to the collection.</param>
            <param name="fileName">The name of the HTTP content to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content" /> is null -or- The <paramref name="name" /> is <c>null</c> or
            contains only white space characters.</exception>
        </member>
        <member name="M:Taikandi.Telebot.MultipartFormDataContentExtensions.AddIf``1(System.Net.Http.MultipartFormDataContent,System.Boolean,System.String,``0,System.String)">
            <summary>
            Add HTTP content to a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized to
            multipart/form-data MIME type.
            </summary>
            <typeparam name="T">Type of the content to add.</typeparam>
            <param name="content">The <see cref="T:System.Net.Http.MultipartFormDataContent" /> object to extend.</param>
            <param name="condition">the condition expression to evaluate. If the condition is <c>true</c> provided
            <paramref name="name" /> and <paramref name="value" /> gets added to the
            <paramref name="content" />.</param>
            <param name="name">The name for the HTTP content to add.</param>
            <param name="value">The content to add to the collection.</param>
            <param name="fileName">The name of the HTTP content to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content" /> is null -or- The <paramref name="name" /> is <c>null</c> or
            contains only white space characters.</exception>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.Add(System.String,System.String)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.Add(System.String,System.Boolean)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.Add(System.String,System.Int32)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.Add(System.String,System.Int64)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.AddIf(System.Boolean,System.String,System.String)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="condition">
            the condition expression to evaluate. If the condition is <c>true</c> provided
            <paramref name="key" /> and <paramref name="value" /> gets added to the collection.
            </param>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.AddIf(System.Boolean,System.String,System.Int32)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="condition">
            the condition expression to evaluate. If the condition is <c>true</c> provided
            <paramref name="key" /> and <paramref name="value" /> gets added to the collection.
            </param>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.AddIf(System.Boolean,System.String,System.Int64)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="condition">
            the condition expression to evaluate. If the condition is <c>true</c> provided
            <paramref name="key" /> and <paramref name="value" /> gets added to the collection.
            </param>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="M:Taikandi.Telebot.NameValueCollection.AddIf(System.Boolean,System.String,System.Boolean)">
            <summary>
            Adds a key value pair to the underlying collection.
            </summary>
            <param name="condition">
            the condition expression to evaluate. If the condition is <c>true</c> provided
            <paramref name="key" /> and <paramref name="value" /> gets added to the collection.
            </param>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with key.</param>
        </member>
        <member name="F:Taikandi.Telebot.ParseMode.Normal">
            <summary>
            Indicates that the normal parser should be used.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.ParseMode.Markdown">
            <summary>
            Indicates that the message should be parsed using Markdown parser. Use this if you want Telegram apps to show bold, italic and inline URLs.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.ServiceUnavailableException">
            <summary>
            Represents errors that occur when Telegram API servers are not available.
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendAudioAsync(System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file. If you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="audioId">Id of an audio file that is already on the Telegram servers.</param>
            <param name="duration">Duration of the audio in seconds.</param>
            <param name="performer">The performer of the audio.</param>
            <param name="title">The track name.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendAudioAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file. If you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="audioId">Id of an audio file that is already on the Telegram servers.</param>
            <param name="duration">Duration of the audio in seconds.</param>
            <param name="performer">The performer of the audio.</param>
            <param name="title">The track name.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendAudioAsync(System.Int64,System.IO.Stream,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file. If you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="audioStream">A <see cref="T:System.IO.Stream" /> to the audio file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="audioStream" />.</param>
            <param name="duration">Duration of the audio in seconds.</param>
            <param name="performer">The performer of the audio.</param>
            <param name="title">The track name.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendAudioAsync(System.String,System.IO.Stream,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file. If you want Telegram clients to display them in the music player. Your audio must be in the .mp3 format.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="audioStream">A <see cref="T:System.IO.Stream" /> to the audio file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="audioStream" />.</param>
            <param name="duration">Duration of the audio in seconds.</param>
            <param name="performer">The performer of the audio.</param>
            <param name="title">The track name.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendAudioFromFileAsync(System.Int64,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="filePath">Fully qualified path to the audio file.</param>
            <param name="duration">Duration of sent audio in seconds.</param>
            <param name="performer">The performer of the audio.</param>
            <param name="title">The track name.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendAudioFromFileAsync(System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="filePath">Fully qualified path to the audio file.</param>
            <param name="duration">Duration of sent audio in seconds.</param>
            <param name="performer">The performer of the audio.</param>
            <param name="title">The track name.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendContactAsync(System.Int64,System.String,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>Send phone contacts.</summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername)
            </param>
            <param name="phoneNumber">Contact's phone number.</param>
            <param name="firstName">Contact's first name.</param>
            <param name="lastName">Contact's last name.</param>
            <param name="disableNotification">
            If set to <c>true</c> sends the message silently. iOS users will not receive a notification,
            Android users will receive a notification with no sound.
            </param>
            <param name="replyToMessageId">
            If the message is a reply, ID of the original message.
            </param>
            <param name="replyMarkup">
            Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains sent
            <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            chatId cannot be null -or- phoneNumber cannot be null -or- firstName cannot be null.
            </exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendContactAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>Send phone contacts.</summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername)
            </param>
            <param name="phoneNumber">Contact's phone number.</param>
            <param name="firstName">Contact's first name.</param>
            <param name="lastName">Contact's last name.</param>
            <param name="disableNotification">
            If set to <c>true</c> sends the message silently. iOS users will not receive a notification,
            Android users will receive a notification with no sound.
            </param>
            <param name="replyToMessageId">
            If the message is a reply, ID of the original message.
            </param>
            <param name="replyMarkup">
            Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains sent
            <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            chatId cannot be null -or- phoneNumber cannot be null -or- firstName cannot be null.
            </exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.Telebot" /> class.
            </summary>
            <param name="apiKey">Telegram API key.</param>
        </member>
        <member name="P:Taikandi.Telebot.Telebot.DisableNotifications">
            <summary>
            Gets or sets a value indicating whether disable all notifications. If set to <c>true</c> Sends the message 
            silently. iOS users will not receive a notification, Android users will receive a notification with no sound.
            <para>
            Note that this property - if <c>true</c> - will overwrite <c>disableNotification</c> parameter of send messages.
            </para>
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.AnswerCallbackQueryAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Sends answers to callback queries sent from inline keyboards. The answer will be displayed to the
            user as a notification at the top of the chat screen or as an alert.
            </summary>
            <param name="callbackQueryId">Unique identifier for the query to be answered.</param>
            <param name="text">
            Text of the notification. If not specified, nothing will be shown to the user.
            </param>
            <param name="showAlert">
            If <c>true</c>, an alert will be shown by the client instead of a notification at the top of the
            chat screen. Defaults to <c>false</c>.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains <c>true</c> on
            success; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.AnswerInlineQueryAsync(System.String,System.Collections.Generic.IEnumerable{Taikandi.Telebot.Types.InlineQueryResult},System.Int32,System.Boolean,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>Sends answers to an inline query.</summary>
            <param name="inlineQueryId">Unique identifier for answered query.</param>
            <param name="results">Results of the inline query.</param>
            <param name="cacheTime">
            The maximum amount of time in seconds the result of the inline query may be cached on the Telegram
            server. Default is 300.
            </param>
            <param name="isPersonal">
            <c>true</c>, to cache the results on the Telegram server only for the user that sent the query. By
            default, results may be returned to any user who sends the same query.
            </param>
            <param name="nextOffset">
            The offset that a client should send in the next query with the same text to receive more results.
            <c>null</c> or <see cref="F:System.String.Empty" /> if there are no more results or if you don't support
            pagination. Offset length can't exceed 64 bytes.
            </param>
            <param name="switchPrivateMessageText">
            If passed, clients will display a button with specified text that switches the user to a private
            chat with the bot and sends the bot a start message with the parameter
            <paramref name="switchPrivateMessageParameter" />.
            </param>
            <param name="switchPrivateMessageParameter">
            Parameter for the start message sent to the bot when user presses the switch button.
            <para>
            Example: An inline bot that sends YouTube videos can ask the user to connect the bot to their
            YouTube account to adapt search results accordingly. To do this, it displays a ‘Connect your
            YouTube account’ button above the results, or even before showing any. The user presses the button,
            switches to a private chat with the bot and, in doing so, passes a start parameter that instructs
            the bot to return an oauth link. Once done, the bot can offer a switch_inline button so that the
            user can easily return to the chat where they wanted to use the bot's inline capabilities.
            </para>
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains <c>true</c> if the
            answer successfully sent; otherwise <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="inlineQueryId" /> is null -or- <paramref name="results" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The nextOffset argument must be less than 64 bytes.
            </exception>
            <exception cref="T:System.ArgumentException">No more than 50 results per query are allowed.</exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
            resources.
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.DownloadFileAsync(Taikandi.Telebot.Types.File,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Downloads the file requested by the
            <see cref="M:Taikandi.Telebot.Telebot.GetFileAsync(System.String,System.Threading.CancellationToken)" /> method.
            </summary>
            <param name="file">
            The file info received by calling
            <see cref="M:Taikandi.Telebot.Telebot.GetFileAsync(System.String,System.Threading.CancellationToken)" />.
            </param>
            <param name="fullPath">
            The full directory and file name to the location where the downloaded file should be saved.
            </param>
            <param name="overwrite">
            If set to <c>true</c> overwrites the file that exists in the <paramref name="fullPath" /> path.
            </param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <exception cref="T:System.InvalidOperationException">
            File already exists in the destination path but overwrite parameter is set to <c>false</c>.
            </exception>
            <exception cref="T:System.ArgumentNullException">file cannot be null | fullPath cannot be null.</exception>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.DownloadFileAsync(Taikandi.Telebot.Types.File,System.Threading.CancellationToken)">
            <summary>
            Downloads the file requested by the
            <see cref="M:Taikandi.Telebot.Telebot.GetFileAsync(System.String,System.Threading.CancellationToken)" /> method.
            </summary>
            <param name="file">
            The file info received by calling
            <see cref="M:Taikandi.Telebot.Telebot.GetFileAsync(System.String,System.Threading.CancellationToken)" />.
            </param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <exception cref="T:System.ArgumentNullException">File cannot be null.</exception>
            <returns>
            Returns a task containing the downloaded file as a stream.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.GetFileAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Downloads the file with the specified <paramref name="fileId" />.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="fullPath">
            The full directory and file name to the location where the downloaded file should be saved.
            </param>
            <param name="overwrite">
            If set to <c>true</c> overwrites the file that exists in the <paramref name="fullPath" /> path.
            </param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.GetFileAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns basic info about a file and prepare it for downloading. For the moment, bots can download
            files of up to 20MB in size.
            </summary>
            <param name="fileId">The file identifier.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            On success, a <see cref="T:Taikandi.Telebot.Types.File" /> object containing basic info about the file to download.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.GetMeAsync(System.Threading.CancellationToken)">
            <summary>
            A simple method for testing your bot's auth token. Requires no parameters. Returns basic
            information about the bot in form of a User object.
            </summary>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            Basic information about the bot in form of a User object.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.GetUpdatesAsync(System.Int64,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Use this method to receive incoming updates using long polling.
            <para>
            Note: In order to avoid getting duplicate updates, recalculate offset after each server response.
            </para>
            </summary>
            <param name="offset">
            Identifier of the first update to be returned. Must be greater by one than the highest among the
            identifiers of previously received updates. By default, updates starting with the earliest
            unconfirmed update are returned. An update is considered confirmed as soon as getUpdates is called
            with an offset higher than its update_id.
            </param>
            <param name="limit">
            Limits the number of updates to be retrieved. Values between 1—100 are accepted. Defaults to 100.
            </param>
            <param name="timeout">
            Timeout in seconds for long polling. Defaults to 0, i.e. usual short polling.
            </param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>An Array of Update objects.</returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.GetUserProfilePhotosAsync(System.Int64,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>Gets a list of profile pictures for a user.</summary>
            <param name="userId">Unique identifier of the target user.</param>
            <param name="offset">
            Sequential number of the first photo to be returned. By default, all photos are returned.
            </param>
            <param name="limit">
            Limits the number of photos to be retrieved. Values between 1-100 are accepted. Defaults to 100.
            </param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.UserProfilePhotos" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.KickChatMemberAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Kicks a user from a group or a supergroup. In the case of supergroups, the user will not be able to
            return to the group on their own using invite links, etc., unless unbanned first using
            <see cref="M:Taikandi.Telebot.Telebot.UnbanChatMemberAsync(System.String,System.Int64,System.Threading.CancellationToken)" />. The bot must be an
            administrator in the group for this to work.
            </summary>
            <param name="chatId">Unique identifier for the target group.</param>
            <param name="userId">Unique identifier of the target user.</param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains <c>true</c> on
            success.
            </returns>
            <remarks>
            Note: This will method only work if the ‘All Members Are Admins’ setting is off in the target
            group. Otherwise members may only be removed by the group's creator or by the member that added
            them.
            </remarks>
            <exception cref="T:System.ArgumentNullException">chatId cannot be null.</exception>
            <exception cref="T:System.ArgumentException">userId must be a number greater than zero.</exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.KickChatMemberAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Kicks a user from a group or a supergroup. In the case of supergroups, the user will not be able to
            return to the group on their own using invite links, etc., unless unbanned first using
            <see cref="M:Taikandi.Telebot.Telebot.UnbanChatMemberAsync(System.String,System.Int64,System.Threading.CancellationToken)" />. The bot must be an
            administrator in the group for this to work.
            </summary>
            <param name="chatId">
            Unique identifier for the target group or username of the target supergroup (in the format
            @supergroupusername).
            </param>
            <param name="userId">Unique identifier of the target user.</param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains <c>true</c> on
            success.
            </returns>
            <remarks>
            Note: This will method only work if the ‘All Members Are Admins’ setting is off in the target
            group. Otherwise members may only be removed by the group's creator or by the member that added
            them.
            </remarks>
            <exception cref="T:System.ArgumentNullException">chatId cannot be null.</exception>
            <exception cref="T:System.ArgumentException">userId must be a number greater than zero.</exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SetWebhookAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Use this method to specify a url and receive incoming updates via an outgoing webhook.
            </summary>
            <param name="url">
            HTTPS url to send updates to. Use an empty string to remove webhook integration
            </param>
            <param name="certificatePath">
            The fully qualified path to the certificate path so that the root certificate in use can be
            checked.
            </param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>A task that represents the asynchronous operation.</returns>
            <remarks>
            Whenever there is an update for the bot, Telegram will send an HTTPS POST request to the specified
            url, containing a JSON-serialized <see cref="T:Taikandi.Telebot.Types.Update" />. In case of an unsuccessful request, it
            will give up after a reasonable amount of attempts.
            <para>
            If you'd like to make sure that the Webhook request comes from Telegram, we recommend using a
            secret path in the URL, e.g. <c>www.example.com/YOUR_TOKEN</c>. Since nobody else knows your bot's
            token, you can be pretty sure it’s Telegram.
            </para>
            <list type="bullet">
                <item>
                    <description>
            You will not be able to receive updates using <see cref="M:Taikandi.Telebot.Telebot.GetUpdatesAsync(System.Int64,System.Int32,System.Int32,System.Threading.CancellationToken)" /> for as long as an
            outgoing webhook is set up.
                    </description>
                </item><item>
                    <description>
            To use a self-signed certificate, you need to upload your public key certificate using
            <paramref name="certificatePath" /> parameter.
                    </description>
                </item><item>
                    <description>
            Ports currently supported for Webhooks: 443, 80, 88, 8443.
                    </description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.UnbanChatMemberAsync(System.Int64,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Unbans a previously kicked user in a supergroup. The user will not return to the group
            automatically, but will be able to join via link, etc. The bot must be an administrator in the
            group for this to work.
            </summary>
            <param name="chatId">Unique identifier for the target group.</param>
            <param name="userId">Unique identifier of the target user.</param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains <c>true</c> on
            success.
            </returns>
            <remarks>
            Note: This will method only work if the ‘All Members Are Admins’ setting is off in the target
            group. Otherwise members may only be removed by the group's creator or by the member that added
            them.
            </remarks>
            <exception cref="T:System.ArgumentNullException">chatId cannot be null.</exception>
            <exception cref="T:System.ArgumentException">userId must be a number greater than zero.</exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.UnbanChatMemberAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Unbans a previously kicked user in a supergroup. The user will not return to the group
            automatically, but will be able to join via link, etc. The bot must be an administrator in the
            group for this to work.
            </summary>
            <param name="chatId">
            Unique identifier for the target group or username of the target supergroup (in the format
            @supergroupusername).
            </param>
            <param name="userId">Unique identifier of the target user.</param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains <c>true</c> on
            success.
            </returns>
            <exception cref="T:System.ArgumentNullException">chatId cannot be null.</exception>
            <exception cref="T:System.ArgumentException">userId must be a number greater than zero.</exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendDocumentAsync(System.Int64,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a general file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="documentId">A file id as string to resend a file that is already on the Telegram servers.</param>
            <param name="caption">The document caption, 0-200 characters.</param>
            <param name="disableNotification">if set to <c>true</c> [disable notification].</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendDocumentAsync(System.String,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a general file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="documentId">A file id as string to resend a file that is already on the Telegram servers.</param>
            <param name="caption">The document caption, 0-200 characters.</param>
            <param name="disableNotification">if set to <c>true</c> [disable notification].</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendDocumentAsync(System.Int64,System.IO.Stream,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a general file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="documentStream">A <see cref="T:System.IO.Stream" /> to the document file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="documentStream" />.</param>
            <param name="caption">Document caption, 0-200 characters.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendDocumentAsync(System.String,System.IO.Stream,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a general file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="documentStream">A <see cref="T:System.IO.Stream" /> to the document file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="documentStream" />.</param>
            <param name="caption">Document caption, 0-200 characters.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendDocumentFromFileAsync(System.Int64,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a general file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="filePath">Fully qualified path to the file to send.</param>
            <param name="caption">The document caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendDocumentFromFileAsync(System.String,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a general file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="filePath">Fully qualified path to the file to send.</param>
            <param name="caption">The document caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendLocationAsync(System.Int64,System.Double,System.Double,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a point on the map.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="latitude">Latitude of location</param>
            <param name="longitude">Longitude of location</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendLocationAsync(System.String,System.Double,System.Double,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a point on the map.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="latitude">Latitude of location</param>
            <param name="longitude">Longitude of location</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageCaptionAsync(System.Int64,System.Int64,System.String,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits captions of the message with the provided identifier sent by the bot or via the bot (for
            inline bots).
            </summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="messageId">Unique identifier of the sent message.</param>
            <param name="caption">New caption of the message.</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited
            Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageCaptionAsync(System.String,System.Int64,System.String,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits captions of the message with the provided identifier sent by the bot or via the bot (for
            inline bots).
            </summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="messageId">Unique identifier of the sent message.</param>
            <param name="caption">New caption of the message.</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited
            Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageCaptionAsync(System.String,System.String,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits captions of the message with the provided identifier sent by the bot or via the bot (for
            inline bots).
            </summary>
            <param name="inlineMessageId">Identifier of the inline message.</param>
            <param name="caption">New caption of the message.</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited
            Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageReplyMarkupAsync(System.Int64,System.Int64,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edit only the reply markup of messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="messageId">Unique identifier of the sent message.</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited
            Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageReplyMarkupAsync(System.String,System.Int64,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edit only the reply markup of messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="messageId">Unique identifier of the sent message.</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited
            Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageReplyMarkupAsync(System.String,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edit only the reply markup of messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="inlineMessageId">Identifier of the inline message.</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited
            Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageTextAsync(System.String,System.String,Taikandi.Telebot.ParseMode,System.Boolean,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits text messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="inlineMessageId">The identifier of the inline message.</param>
            <param name="text">New text of the message</param>
            <param name="parseMode">
            A value from <see cref="T:Taikandi.Telebot.ParseMode" /> enum indicates the way that the Telegram should parse the
            sent message. Send <see cref="F:Taikandi.Telebot.ParseMode.Markdown" />, if you want Telegram apps to show bold,
            italic, fixed-width text or inline URLs in your bot's message.
            </param>
            <param name="disableWebPagePreview">Disables link previews for links in this message</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains the edited
            <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageTextAsync(System.Int64,System.Int64,System.String,Taikandi.Telebot.ParseMode,System.Boolean,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits text messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="messageId">Unique identifier of the sent message.</param>
            <param name="text">New text of the message</param>
            <param name="parseMode">
            A value from <see cref="T:Taikandi.Telebot.ParseMode" /> enum indicates the way that the Telegram should parse the
            sent message. Send <see cref="F:Taikandi.Telebot.ParseMode.Markdown" />, if you want Telegram apps to show bold,
            italic, fixed-width text or inline URLs in your bot's message.
            </param>
            <param name="disableWebPagePreview">Disables link previews for links in this message</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains the edited
            <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageTextAsync(System.String,System.Int64,System.String,Taikandi.Telebot.ParseMode,System.Boolean,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits text messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="chatId">
            Unique identifier for the target chat or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="messageId">Unique identifier of the sent message.</param>
            <param name="text">New text of the message</param>
            <param name="parseMode">
            A value from <see cref="T:Taikandi.Telebot.ParseMode" /> enum indicates the way that the Telegram should parse the
            sent message. Send <see cref="F:Taikandi.Telebot.ParseMode.Markdown" />, if you want Telegram apps to show bold,
            italic, fixed-width text or inline URLs in your bot's message.
            </param>
            <param name="disableWebPagePreview">Disables link previews for links in this message</param>
            <param name="replyMarkup">
            An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains the edited
            <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.ForwardMessageAsync(System.String,System.String,System.Int64,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Forwards message of any kind.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="fromChatId">Unique identifier for the chat where the original message was sent or username of the target
            channel (in the format @channelusername).</param>
            <param name="messageId">Unique message identifier</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.ForwardMessageAsync(System.Int64,System.String,System.Int64,System.Boolean,System.Threading.CancellationToken)">
            <summary>Forwards message of any kind.</summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="fromChatId">
            Unique identifier for the chat where the original message was sent or username of the target
            channel (in the format @channelusername).
            </param>
            <param name="messageId">Unique message identifier</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.ForwardMessageAsync(System.Int64,System.Int64,System.Int64,System.Boolean,System.Threading.CancellationToken)">
            <summary>Forwards message of any kind.</summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="fromChatId">
            Unique identifier for the chat where the original message was sent.
            </param>
            <param name="messageId">Unique message identifier</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendChatActionAsync(System.Int64,Taikandi.Telebot.Types.ChatAction,System.Threading.CancellationToken)">
            <summary>
            Sends a chat action. Use this method when you need to tell the user that something is happening on
            the bot's side.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="action">Type of action to broadcast.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Use this method when you need to tell the user that something is happening on the bot's side. The
            status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear
            its typing status).
            <example>
            The <c>ImageBot</c> needs some time to process a request and upload the image. Instead of sending a
            text message along the lines of "Retrieving image, please wait…", the bot may use
            <see cref="M:Taikandi.Telebot.Telebot.SendChatActionAsync(System.Int64,Taikandi.Telebot.Types.ChatAction,System.Threading.CancellationToken)" />
            with action = upload_photo. The user will see a "sending photo" status for the bot.
            </example>
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendChatActionAsync(System.String,Taikandi.Telebot.Types.ChatAction,System.Threading.CancellationToken)">
            <summary>
            Sends a chat action. Use this method when you need to tell the user that something is happening on
            the bot's side.
            </summary>
            <param name="chatId">
            Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="action">Type of action to broadcast.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Use this method when you need to tell the user that something is happening on the bot's side. The
            status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear
            its typing status).
            <example>
            The <c>ImageBot</c> needs some time to process a request and upload the image. Instead of sending a
            text message along the lines of "Retrieving image, please wait…", the bot may use
            <see cref="M:Taikandi.Telebot.Telebot.SendChatActionAsync(System.String,Taikandi.Telebot.Types.ChatAction,System.Threading.CancellationToken)" />
            with action = upload_photo. The user will see a "sending photo" status for the bot.
            </example>
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendMessageAsync(System.Int64,System.String,Taikandi.Telebot.ParseMode,System.Boolean,System.Boolean,System.Int64,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a text message.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="text">Text of the message to be sent.</param>
            <param name="parseMode">Indicates the way that the Telegram should parse the sent message.</param>
            <param name="disableWebPagePreview">if set to <c>true</c> disables link previews for links in this message.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendMessageAsync(System.String,System.String,Taikandi.Telebot.ParseMode,System.Boolean,System.Boolean,System.Int64,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>Sends a text message.</summary>
            <param name="chatId">
            Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).
            </param>
            <param name="text">Text of the message to be sent.</param>
            <param name="parseMode">
            Indicates the way that the Telegram should parse the sent message.
            </param>
            <param name="disableWebPagePreview">
            if set to <c>true</c> disables link previews for links in this message.
            </param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">
            If the message is a reply, ID of the original message.
            </param>
            <param name="replyMarkup">
            Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.
            </param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.
            </param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendMessageAsync(Taikandi.Telebot.Types.Message,System.String,Taikandi.Telebot.ParseMode,System.Boolean,System.Boolean,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a text message and requests to hide the current custom keyboard by default. Optionally if the
            message is a reply, ID of the original message will be sent.
            </summary>
            <param name="message">The original received message.</param>
            <param name="text">Text of the message to be sent.</param>
            <param name="parseMode">Indicates the way that the Telegram should parse the sent message.</param>
            <param name="disableWebPagePreview">if set to <c>true</c> disables link previews for links in this message.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user. Defaults to hide the current
            custom keyboard.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendPhotoAsync(System.Int64,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a photo.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="documentId">A file id as string to resend a photo that is already on the Telegram servers.</param>
            <param name="caption">Photo caption (may also be used when resending photos by file id).</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendPhotoAsync(System.String,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a photo.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="documentId">A file id as string to resend a photo that is already on the Telegram servers.</param>
            <param name="caption">Photo caption (may also be used when resending photos by file id).</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendPhotoAsync(System.Int64,System.IO.Stream,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a photo.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="photoStream">A <see cref="T:System.IO.Stream" /> to the photo to upload.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="photoStream" />.</param>
            <param name="caption">Photo caption (may also be used when resending photos by file id).</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendPhotoAsync(System.String,System.IO.Stream,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a photo.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="photoStream">A <see cref="T:System.IO.Stream" /> to the photo to upload.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="photoStream" />.</param>
            <param name="caption">Photo caption (may also be used when resending photos by file id).</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendPhotoFromFileAsync(System.Int64,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a photo.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="filePath">The fully qualified path to the photo to send.</param>
            <param name="caption">Photo caption (may also be used when resending photos by file id).</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendPhotoFromFileAsync(System.String,System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a photo.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="filePath">The fully qualified path to the photo to send.</param>
            <param name="caption">Photo caption (may also be used when resending photos by file id).</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.CreateHttpClient">
            <summary>
            Creates a new instance of <see cref="T:System.Net.Http.HttpClient" /> to connect to the Telegram bot API.
            </summary>
            <returns>
            A new instance of <see cref="T:System.Net.Http.HttpClient" /> configured to connect to the Telegram bot API.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
            <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged
            resources.
            </param>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageTextAsync(System.String,System.Int64,System.String,System.String,Taikandi.Telebot.ParseMode,System.Boolean,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits text messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="chatId">Unique identifier for the target chat or username of the target channel (in the format @channelusername). Required if <paramref name="inlineMessageId"/> is not specified.</param>
            <param name="messageId">Unique identifier of the sent message. Required if <paramref name="inlineMessageId"/> is not specified.</param>
            <param name="inlineMessageId">The identifier of the inline message. Required if <paramref name="chatId"/> and <paramref name="messageId"/> are not specified.</param>
            <param name="text">New text of the message</param>
            <param name="parseMode">
            A value from <see cref="T:Taikandi.Telebot.ParseMode"/> enum indicates the way that the Telegram should parse the sent message.
            Send <see cref="F:Taikandi.Telebot.ParseMode.Markdown"/>, if you want Telegram apps to show bold, italic, fixed-width text or inline URLs in your bot's message.
            </param>
            <param name="disableWebPagePreview">Disables link previews for links in this message</param>
            <param name="replyMarkup">An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
            A task that represents the asynchronous operation. The task results contains the edited <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageCaptionAsync(System.String,System.Int64,System.String,System.String,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edits captions of the message with the provided identifier sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="chatId">Unique identifier for the target chat or username of the target channel (in the format @channelusername). Required if <paramref name="inlineMessageId" /> is not specified.</param>
            <param name="messageId">Unique identifier of the sent message. Required if <paramref name="inlineMessageId" /> is not specified.</param>
            <param name="inlineMessageId">Identifier of the inline message. Required if <paramref name="chatId"/> and <paramref name="messageId"/> are not specified. </param>
            <param name="caption">New caption of the message.</param>
            <param name="replyMarkup">An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.EditMessageReplyMarkupAsync(System.String,System.Int64,System.String,Taikandi.Telebot.Types.InlineKeyboardMarkup,System.Threading.CancellationToken)">
            <summary>
            Edit only the reply markup of messages sent by the bot or via the bot (for inline bots).
            </summary>
            <param name="chatId">Unique identifier for the target chat or username of the target channel (in the format @channelusername). Required if <paramref name="inlineMessageId" /> is not specified.</param>
            <param name="messageId">Unique identifier of the sent message. Required if <paramref name="inlineMessageId" /> is not specified.</param>
            <param name="inlineMessageId">Identifier of the inline message. Required if <paramref name="chatId" /> and <paramref name="messageId" /> are not specified.</param>
            <param name="replyMarkup">An <see cref="T:Taikandi.Telebot.Types.InlineKeyboardMarkup" /> object for a custom reply keyboard.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
            A task that represents the asynchronous operation. On success the task results contains the edited Message is returned.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendStickerAsync(System.Int64,System.String,System.Int32,System.Boolean,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends <c>.webp</c> sticker.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="stickerId">A file id as string to resend a sticker that is already on the Telegram servers.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendStickerAsync(System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends <c>.webp</c> sticker.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="stickerId">A file id as string to resend a sticker that is already on the Telegram servers.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendStickerAsync(System.Int64,System.IO.Stream,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends <c>.webp</c> sticker.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="stickerStream">A <see cref="T:System.IO.Stream" /> to the sticker file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="stickerStream" />.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendStickerAsync(System.String,System.IO.Stream,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends <c>.webp</c> sticker.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="stickerStream">A <see cref="T:System.IO.Stream" /> to the sticker file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="stickerStream" />.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendStickerFromFileAsync(System.Int64,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends <c>.webp</c> sticker.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="filePath">Fully qualified path to the sticker to send.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendStickerFromFileAsync(System.String,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends <c>.webp</c> sticker.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="filePath">Fully qualified path to the sticker to send.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVenueAsync(System.Int64,System.Single,System.Single,System.String,System.String,System.String,System.Boolean,System.Int64,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>Send information about a venue.</summary>
            <param name="chatId">Unique identifier for the target chat.</param>
            <param name="latitude">Latitude of the venue.</param>
            <param name="longitude">Longitude of the venue.</param>
            <param name="title">Name of the venue.</param>
            <param name="address">Address of the venue.</param>
            <param name="forsquareId">Foursquare identifier of the venue.</param>
            <param name="disableNotification">
            If set to <c>true</c> sends the message silently. iOS users will not receive a notification,
            Android users will receive a notification with no sound.
            </param>
            <param name="replyToMessageId">
            If the message is a reply, ID of the original message.
            </param>
            <param name="replyMarkup">
            Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.
            </param>
            <returns>
            A task that represents the asynchronous operation. The task results contains sent
            <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVenueAsync(System.String,System.Single,System.Single,System.String,System.String,System.String,System.Boolean,System.Int64,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Send information about a venue.
            </summary>
            <param name="chatId">Unique identifier for the target chat or username of the target channel (in the format
            @channelusername).</param>
            <param name="latitude">Latitude of the venue.</param>
            <param name="longitude">Longitude of the venue.</param>
            <param name="title">Name of the venue.</param>
            <param name="address">Address of the venue.</param>
            <param name="forsquareId">Foursquare identifier of the venue.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification,
            Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to
            complete.</param>
            <returns>
            A task that represents the asynchronous operation. The task results contains sent
            <see cref="T:Taikandi.Telebot.Types.Message" /> on success.
            </returns>
            <exception cref="T:System.ArgumentNullException">chatId cannot be null -or- title cannot be null -or- address cannot be null.</exception>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVideoAsync(System.Int64,System.String,System.Int32,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a video file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="videoId">A file id as string to resend a video that is already on the Telegram servers.</param>
            <param name="duration">Duration of sent video in seconds.</param>
            <param name="caption">Video caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Telegram clients support mp4 videos (other formats may be sent as <see cref="T:Taikandi.Telebot.Types.Document" />). Bots
            can currently send video files of up to 50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVideoAsync(System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a video file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="videoId">A file id as string to resend a video that is already on the Telegram servers.</param>
            <param name="duration">Duration of sent video in seconds.</param>
            <param name="caption">Video caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Telegram clients support mp4 videos (other formats may be sent as <see cref="T:Taikandi.Telebot.Types.Document" />). Bots
            can currently send video files of up to 50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVideoAsync(System.Int64,System.IO.Stream,System.String,System.Int32,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a video file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="videoStream">A <see cref="T:System.IO.Stream" /> to the video file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="videoStream" />.</param>
            <param name="duration">Duration of sent video in seconds.</param>
            <param name="caption">Video caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Telegram clients support mp4 videos (other formats may be sent as <see cref="T:Taikandi.Telebot.Types.Document" />). Bots
            can currently send video files of up to 50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVideoAsync(System.String,System.IO.Stream,System.String,System.Int32,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a video file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="videoStream">A <see cref="T:System.IO.Stream" /> to the video file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="videoStream" />.</param>
            <param name="duration">Duration of sent video in seconds.</param>
            <param name="caption">Video caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Telegram clients support mp4 videos (other formats may be sent as <see cref="T:Taikandi.Telebot.Types.Document" />). Bots
            can currently send video files of up to 50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVideoFromFileAsync(System.Int64,System.String,System.Int32,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a video file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="filePath">Fully qualified path to the video file to send.</param>
            <param name="duration">Duration of sent video in seconds.</param>
            <param name="caption">Video caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVideoFromFileAsync(System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends a video file.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="filePath">Fully qualified path to the video file to send.</param>
            <param name="duration">Duration of sent video in seconds.</param>
            <param name="caption">Video caption.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the
            future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVoiceAsync(System.Int64,System.String,System.Int32,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="voice">Id of an audio file that is already on the Telegram servers to resend it.</param>
            <param name="duration">Duration of sent audio in seconds.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent
            as <see cref="T:Taikandi.Telebot.Types.Audio" /> or <see cref="T:Taikandi.Telebot.Types.Document" />). Bots can currently send audio files of up to
            50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVoiceAsync(System.String,System.String,System.Int32,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="voice">Id of an audio file that is already on the Telegram servers to resend it.</param>
            <param name="duration">Duration of sent audio in seconds.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent
            as <see cref="T:Taikandi.Telebot.Types.Audio" /> or <see cref="T:Taikandi.Telebot.Types.Document" />). Bots can currently send audio files of up to
            50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVoiceAsync(System.Int64,System.IO.Stream,System.String,System.Int32,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="voiceStream">A <see cref="T:System.IO.Stream" /> to the audio file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="voiceStream" />.</param>
            <param name="duration">Duration of sent audio in seconds</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent
            as <see cref="T:Taikandi.Telebot.Types.Audio" /> or <see cref="T:Taikandi.Telebot.Types.Document" />). Bots can currently send audio files of up to
            50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVoiceAsync(System.String,System.IO.Stream,System.String,System.Int32,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="voiceStream">A <see cref="T:System.IO.Stream" /> to the audio file to send.</param>
            <param name="fileName">A name for the file to be sent using <paramref name="voiceStream" />.</param>
            <param name="duration">Duration of sent audio in seconds</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent
            as <see cref="T:Taikandi.Telebot.Types.Audio" /> or <see cref="T:Taikandi.Telebot.Types.Document" />). Bots can currently send audio files of up to
            50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVoiceFromFileAsync(System.Int64,System.String,System.Int32,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient.</param>
            <param name="filePath">Fully qualified path to the audio file.</param>
            <param name="duration">Duration of sent audio in seconds.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent
            as <see cref="T:Taikandi.Telebot.Types.Audio" /> or <see cref="T:Taikandi.Telebot.Types.Document" />). Bots can currently send audio files of up to
            50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Telebot.SendVoiceFromFileAsync(System.String,System.String,System.Int32,System.Boolean,System.Int32,Taikandi.Telebot.Types.IReply,System.Threading.CancellationToken)">
            <summary>
            Sends an audio file to be displayed as a playable voice message on Telegram clients.
            </summary>
            <param name="chatId">Unique identifier for the message recipient or username of the target channel (in the format
            @channelusername).</param>
            <param name="filePath">Fully qualified path to the audio file.</param>
            <param name="duration">Duration of sent audio in seconds.</param>
            <param name="disableNotification">If set to <c>true</c> sends the message silently. iOS users will not receive a notification, Android users will receive a notification with no sound.</param>
            <param name="replyToMessageId">If the message is a reply, ID of the original message.</param>
            <param name="replyMarkup">Additional interface options. An <see cref="T:Taikandi.Telebot.Types.IReply" /> object for a custom reply keyboard,
            instructions to hide keyboard or to force a reply from the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of
            cancellation.</param>
            <returns>
            On success, returns the sent <see cref="T:Taikandi.Telebot.Types.Message" />.
            </returns>
            <remarks>
            For this to work, your audio must be in an .ogg file encoded with OPUS (other formats may be sent
            as <see cref="T:Taikandi.Telebot.Types.Audio" /> or <see cref="T:Taikandi.Telebot.Types.Document" />). Bots can currently send audio files of up to
            50 MB in size, this limit may be changed in the future.
            </remarks>
        </member>
        <member name="M:Taikandi.Telebot.Converters.InlineQueryResultTypeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Converters.InlineQueryResultTypeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Converters.InlineQueryResultTypeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Taikandi.Telebot.Converters.ParseModeTypeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Converters.ParseModeTypeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Reads the JSON representation of the object.</summary>
            <param name="reader">
            The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.
            </param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Taikandi.Telebot.Converters.ParseModeTypeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Writes the JSON representation of the object.</summary>
            <param name="writer">
            The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.
            </param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Taikandi.Telebot.Converters.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader" /> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Converters.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter" /> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Taikandi.Telebot.Types.Audio">
            <summary>
            This object represents an audio file (voice note).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Audio.Duration">
            <summary>
            Gets or sets the duration of the audio in seconds as defined by sender.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Audio.FileId">
            <summary>
            Gets or sets the unique identifier for this file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Audio.FileSize">
            <summary>Gets or sets the file size (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Audio.MimeType">
            <summary>
            Gets or sets the MIME type of the file as defined by sender (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Audio.Performer">
            <summary>
            Gets or sets the performer of the audio as defined by sender or by audio tags (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Audio.Title">
            <summary>
            Gets or sets the title of the audio as defined by sender or by audio tags (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.CallbackQuery">
            <summary>
            Represents an incoming callback query from a callback button in an inline keyboard. If
            the button that originated the query was attached to a message sent by the bot, the <see cref="T:CallbackQuery.Message"/> property
            will be presented. If the button was attached to a message sent via the bot (in inline mode), the
            <see cref="T:CallbackQuery.InlineMessageId"/> property will be presented.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.CallbackQuery.Data">
            <summary>
            Gets or sets the data associated with the callback button. Be aware that a bad client can send arbitrary data in
            this field
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.CallbackQuery.From">
            <summary>
            Gets or sets the sender.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.CallbackQuery.Id">
            <summary>
            Gets or sets the unique identifier for this query.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.CallbackQuery.InlineMessageId">
            <summary>
            Gets or sets the identifier of the message sent via the bot in inline mode, that originated the query (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.CallbackQuery.Message">
            <summary>
            Gets or sets the <see cref="P:Taikandi.Telebot.Types.CallbackQuery.Message"/> with the callback button that originated the query. 
            Note that message content and message date will not be available if the message is too old (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Chat">
            <summary>This object represents a chat.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Chat.FirstName">
            <summary>
            Gets or sets the first name of the other party in a private chat (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Chat.Id">
            <summary>
            Gets or sets the unique identifier for this chat.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Chat.LastName">
            <summary>
            Gets or sets the last name of the other party in a private chat (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Chat.Title">
            <summary>
            Gets or sets the title of the channel or group chat (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Chat.Type">
            <summary>Gets or sets the type of chat.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Chat.Username">
            <summary>
            Gets or sets the username of the private chat or channel (Optional).
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Types.ChatAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.Types.ChatAction" /> class.
            </summary>
            <param name="value">The chat action value.</param>
        </member>
        <member name="M:Taikandi.Telebot.Types.ChatAction.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified object  is equal to the current object; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:Taikandi.Telebot.Types.ChatAction.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Types.ChatAction.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Taikandi.Telebot.Types.ChatAction.Equals(Taikandi.Telebot.Types.ChatAction)">
            <summary>
            Determines whether the specified <see cref="T:Taikandi.Telebot.Types.ChatAction" /> is equal to the current
            <see cref="T:Taikandi.Telebot.Types.ChatAction" />.
            </summary>
            <returns>
            <c>true</c> if the specified <see cref="T:Taikandi.Telebot.Types.ChatAction" /> is equal to the current instance; otherwise,
            <c>false</c>.
            </returns>
            <param name="other">
            The <see cref="T:Taikandi.Telebot.Types.ChatAction" /> to compare with the current instance.
            </param>
        </member>
        <member name="T:Taikandi.Telebot.Types.ChatType">
            <summary>Provides list of supported chat types.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.ChatType.Channel">
            <summary>
            Indicates that the chat is a channel.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.ChatType.Group">
            <summary>
            Indicates that the chat is a group chat.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.ChatType.Private">
            <summary>
            Indicates that the chat is a private chat.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.ChatType.SuperGroup">
            <summary>
            Indicates that the chat is a supergroup chat.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.ChosenInlineResult">
            <summary>
            This object represents a result of an inline query that was chosen by the user and sent to their
            chat partner.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ChosenInlineResult.From">
            <summary>Gets or sets the user that chose the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ChosenInlineResult.InlineMessageId">
            <summary>
            Gets or sets the identifier of the sent inline message. Available only if there is an inline
            keyboard attached to the message. Will be also received in callback queries and can be used to edit
            the message.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ChosenInlineResult.Location">
            <summary>
            Gets or sets the sender location, only for bots that request user location.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ChosenInlineResult.Query">
            <summary>
            Gets or sets the query that was used to obtain the result.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ChosenInlineResult.ResultId">
            <summary>
            Gets or sets the unique identifier for the result that was chosen.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Common">
            <summary>Provides common constant values.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.Common.IdentifierMaxValue">
            <summary>
            Maximum value of an identifier supported by Telegram.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.Common.IdentifierMinValue">
            <summary>
            Minimum value of an identifier supported by Telegram.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Contact">
            <summary>This object represents a phone contact.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Contact.FirstName">
            <summary>Gets or sets the contact's first name</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Contact.LastName">
            <summary>Gets or sets the contact's last name (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Contact.PhoneNumber">
            <summary>Gets or sets the contact's phone number.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Contact.UserId">
            <summary>
            Gets or sets the contact's user identifier in Telegram (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Document">
            <summary>
            This object represents a general file (as opposed to Photos and <see cref="T:Taikandi.Telebot.Types.Audio" />s).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Document.FileId">
            <summary>Gets or sets the unique file identifier.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Document.FileName">
            <summary>
            Gets or sets the original filename as defined by sender (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Document.FileSize">
            <summary>Gets or sets the file size (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Document.MimeType">
            <summary>
            Gets or sets the MIME type of the file as defined by sender (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Document.Thumb">
            <summary>
            Gets or sets the document thumbnail as defined by sender.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.File">
            <summary>
            This object represents a file ready to be downloaded.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.File.Id">
            <summary>
            Gets or sets the unique identifier for this <see cref="T:Taikandi.Telebot.Types.File" />.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.File.Path">
            <summary>Gets or sets the file path.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.File.Size">
            <summary>Gets or sets the file size, if known (Optional).</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.ForceReply">
            <summary>
            Upon receiving a message with this object, Telegram clients will display a reply interface to the
            user (act as if the user has selected the bot‘s message and tapped 'Reply'). This can be extremely
            useful if you want to create user-friendly step-by-step interfaces without having to sacrifice
            privacy mode.
            <para>
            More information: https://core.telegram.org/bots/api#forcereply
            </para>
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ForceReply.ReplyForce">
            <summary>
            Gets or sets a value indicating whether to shows reply interface to the user, as if they manually
            selected the bot's message and tapped 'Reply'.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ForceReply.Selective">
            <summary>
            Gets or sets a value indicating whether you want to force reply from specific users only
            (Optional).
            </summary>
            <remarks>
            Use this parameter if you want to force reply from specific users only.
            <para>
            Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is
            a reply (has reply_to_message_id), sender of the original message.
            </para>
            </remarks>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineKeyboardButton">
            <summary>
            Represents one button of an inline keyboard. You must use exactly one of the optional fields.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineKeyboardButton.CallbackData">
            <summary>
            Gets or sets the data to be sent in a callback query to the bot when button is pressed (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineKeyboardButton.SwitchInlineQuery">
            <summary>
            Gets or sets the inline query of the selected chat (Optional). See remarks for more information.
            </summary>
            <remarks>
            If set, pressing the button will prompt the user to select one of their chats, open that chat and
            insert the bot�s username and the specified inline query in the input field. Can be empty, in which
            case just the bot�s username will be inserted.
            <para>
            Note: This offers an easy way for users to start using your bot in inline mode when they are
            currently in a private chat with it. Especially useful when combined with switch_pm� actions � in
            this case the user will be automatically returned to the chat they switched from, skipping the chat
            selection screen.
            </para>
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineKeyboardButton.Text">
            <summary>Gets or sets the label text on the button.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineKeyboardButton.Url">
            <summary>
            Gets or sets the HTTP url to be opened when button is pressed (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineKeyboardMarkup">
            <summary>
            Represents an inline keyboard that appears right next to the message it belongs to.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineKeyboardMarkup.InlineKeyboard">
            <summary>
            Gets or sets an array of button rows, each represented by an Array of
            <see cref="T:Taikandi.Telebot.Types.InlineKeyboardButton" /> objects.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQuery">
            <summary>represents an incoming inline query.</summary>
            <remarks>
            When the user sends an empty query, your bot could return some default or trending results.
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQuery.From">
            <summary>Gets or sets the sender of the query.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQuery.Id">
            <summary>
            Gets or sets the unique identifier of the <see cref="T:Taikandi.Telebot.Types.InlineQuery" />.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQuery.Offset">
            <summary>
            Gets or sets the offset of the results to be returned, can be controlled by the bot.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQuery.Query">
            <summary>Gets or sets the text of the query.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQuery.Location">
            <summary>
            Gets or sets the sender location, only for bots that request user location.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResult">
            <summary>
            A base class to represent one result of an inline query.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResult.Id">
            <summary>
            Gets or sets the unique identifier of this result. Must be less than 64 bytes.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent">
            <summary>
            Gets or sets the content of the message to be sent.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResult.ReplyMarkup">
            <summary>
            Gets or sets the inline keyboard attached to the message (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResult.Type">
            <summary>Gets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultArticle">
            <summary>
            Represents a result which is a link to an article or web page.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.Description">
            <summary>
            Gets or sets a short description of the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.HideUrl">
            <summary>
            Gets or sets a value indicating whether to hide the URL in the message.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.MessageContent">
            <summary>
            Gets or sets the content of the message to be sent.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.ThumbnailHeight">
            <summary>
            Gets or sets the height of the thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail for the result either in <c>.jpeg</c> or <c>.gif</c> format
            (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.ThumbnailWidth">
            <summary>
            Gets or sets the width of the thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultArticle.Url">
            <summary>Gets or sets the URL of the result (Optional).</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultAudio">
            <summary>
            Represents a link to an mp3 audio file. By default, this audio file will be sent by the user.
            Alternatively, you can use <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with
            the specified content instead of the audio.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultAudio.Duration">
            <summary>
            Gets or sets the audio duration in seconds (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultAudio.Performer">
            <summary>
            Gets or sets the performer of the audio (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultAudio.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultAudio.Type">
            <summary>Gets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultAudio.Url">
            <summary>Gets or sets a valid URL for the audio file.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedAudio">
            <summary>
            Represents a link to an mp3 audio file stored on the Telegram servers. By default, this audio file
            will be sent by the user. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content
            instead of the audio.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedAudio.FileId">
            <summary>
            Gets or sets a valid file identifier of the photo file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedAudio.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedDocument">
            <summary>
            Represents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content instead of the file. Currently, only pdf-files and zip archives can be sent using this method.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedDocument.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the document to be sent (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedDocument.Description">
            <summary>
            Gets or sets the short description of the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedDocument.FileId">
            <summary>
            Gets or sets a valid file identifier of the photo file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedDocument.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedDocument.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedGif">
            <summary>
            Represents a link to an animated GIF file stored on the Telegram servers. By default, this animated
            GIF file will be sent by the user with an optional caption. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with specified content instead of
            the animation.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedGif.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the GIF file to be sent (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedGif.FileId">
            <summary>
            Gets or sets a valid file identifier of the GIF file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedGif.Title">
            <summary>Gets or sets the title of the result (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedGif.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedMpeg4Gif">
            <summary>
            Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content instead of the animation.
            the animation.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedMpeg4Gif.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the MPEG-4 file to be sent (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedMpeg4Gif.FileId">
            <summary>
            Gets or sets a valid file identifier of the MP4 file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedMpeg4Gif.Title">
            <summary>Gets or sets the title of the result (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedMpeg4Gif.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedPhoto">
            <summary>
            Represents a link to a photo stored on the Telegram servers. By default, this photo will be sent by
            the user with an optional caption. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content
            instead of the photo.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedPhoto.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the image file to be sent (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedPhoto.Description">
            <summary>
            Gets or sets the short description of the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedPhoto.FileId">
            <summary>
            Gets or sets a valid file identifier of the photo file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedPhoto.Title">
            <summary>Gets or sets the title of the result (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedPhoto.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedSticker">
            <summary>
            Represents a link to a sticker stored on the Telegram servers. By default, this sticker will be
            sent by the user. Alternatively, you can use <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to
            send a message with the specified content instead of the sticker.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedSticker.FileId">
            <summary>
            Gets or sets a valid file identifier of the sticker file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedSticker.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedVideo">
            <summary>
            Represents a link to a video file stored on the Telegram servers. By default, this video file will
            be sent by the user with an optional caption. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content
            instead of the video.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVideo.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the video to be sent (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVideo.Description">
            <summary>
            Gets or sets the short description of the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVideo.FileId">
            <summary>
            Gets or sets a valid file identifier of the photo file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVideo.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVideo.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultCachedVoice">
            <summary>
            Represents a link to a voice message stored on the Telegram servers. By default, this voice message
            will be sent by the user. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content
            instead of the voice message.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVoice.FileId">
            <summary>
            Gets or sets a valid file identifier of the photo file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVoice.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultCachedVoice.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultContact">
            <summary>
            Represents a contact with a phone number. By default, this contact will be sent by the user.
            Alternatively, you can use <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" />  to send a message with
            the specified content instead of the contact.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
            <remarks>
            This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore
            them.
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultContact.FirstName">
            <summary>Gets or sets the contact's first name.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultContact.LastName">
            <summary>Gets or sets the contact's last name (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultContact.PhoneNumber">
            <summary>Gets or sets the contact's phone number.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultContact.ThumbnailHeight">
            <summary>
            Gets or sets the height of the thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultContact.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail for the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultContact.ThumbnailWidth">
            <summary>
            Gets or sets the width of the thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultContact.Type">
            <summary>Gets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultDocument">
            <summary>
            Represents a link to a file. By default, this file will be sent by the user with an optional
            caption. Alternatively, you can use input_message_content to send a message with the specified
            content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
            <remarks>
            This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore
            them.
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.Caption">
            <summary>
            Gets or sets the caption of the document to be sent, 0-200 characters (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.Description">
            <summary>
            Gets or sets a short description of the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.MimeType">
            <summary>
            Gets or sets the Mime type of the content of the file, either “application/pdf” or
            “application/zip”.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.ThumbnailHeight">
            <summary>
            Gets or sets the height of the document thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail (JPEG only) for the file (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.ThumbnailWidth">
            <summary>
            Gets or sets the width of the document thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.Type">
            <summary>Gets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultDocument.Url">
            <summary>Gets or sets a valid URL for the file.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultGif">
            <summary>
            Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the
            user with optional caption. Alternatively, you can provide
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" />
            to send it instead of the animation.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultGif.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the <c>.gif</c> file to be sent (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultGif.Height">
            <summary>
            Gets or sets the height of the <c>.gif</c> file (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultGif.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail for the result either in <c>.jpeg</c> or <c>.gif</c> format.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultGif.Title">
            <summary>Gets or sets the title of the result (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultGif.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultGif.Url">
            <summary>
            Gets or sets a valid URL for the <c>.gif</c> file. File size must not exceed 1MB.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultGif.Width">
            <summary>
            Gets or sets the width of the <c>.gif</c> file (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultLocation">
            <summary>
            Represents a location on a map. By default, the location will be sent by the user. Alternatively,
            you can use <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified
            content instead of the location.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
            <remarks>
            This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore
            them.
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultLocation.Latitude">
            <summary>
            Gets or sets the latitude of the location in degrees.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultLocation.Longitude">
            <summary>
            Gets or sets the longitude of the location in degrees.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultLocation.ThumbnailHeight">
            <summary>
            Gets or sets the height of the thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultLocation.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail for the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultLocation.ThumbnailWidth">
            <summary>
            Gets or sets the width of the thumbnail (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultLocation.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultLocation.Type">
            <summary>Gets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif">
            <summary>
            Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this
            animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can provide
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send it instead of the animation.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the <c>.mp4</c> video file to be sent
            (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif.Height">
            <summary>
            Gets or sets the height of the <c>.mp4</c> video file (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail for the result either in <c>.jpeg</c> or <c>.gif</c> format.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif.Title">
            <summary>Gets or sets the title of the result (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif.Url">
            <summary>
            Gets or sets a valid URL for the <c>.mp4</c> file. File size must not exceed 1MB.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif.Width">
            <summary>
            Gets or sets the width of the <c>.mp4</c> video file (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultPhoto">
            <summary>
            Represents a link to a photo. By default, this photo will be sent by the user with optional
            caption. Alternatively, you can provide <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send it instead of photo.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.Caption">
            <summary>
            Gets or sets the maximum of 200 character caption of the image file to be sent (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.Description">
            <summary>
            Gets or sets the short description of the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.Height">
            <summary>Gets or sets the height of the photo (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.MimeType">
            <summary>
            Gets or sets the mime type of the photo, defaults to image/jpeg (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail for the result either in <c>.jpeg</c> or <c>.gif</c> format.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.Title">
            <summary>Gets or sets the title of the result (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.Url">
            <summary>
            Gets or sets a valid URL of the photo. Photo size must not exceed 5MB.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultPhoto.Width">
            <summary>Gets or sets the width of the photo (Optional).</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultType">
            <summary>
            Provides all available types of a <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.None">
            <summary>
            Indicates that the type of <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is not specified or is unknown.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Article">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultArticle" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Photo">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultPhoto" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Gif">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultGif" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Mpeg4Gif">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultMpeg4Gif" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Video">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultVideo" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Audio">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultAudio" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Contact">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultContact" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Document">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultDocument" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Location">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultLocation" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Venue">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultVenue" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Voice">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultVoice" />.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.InlineQueryResultType.Sticker">
            <summary>
            Indicates that the <see cref="T:Taikandi.Telebot.Types.InlineQueryResult" /> is an <see cref="T:Taikandi.Telebot.Types.InlineQueryResultCachedSticker" />.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultVenue">
            <summary>
            Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use 
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content instead of the venue.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResultLocation" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVenue.Address">
            <summary>Gets or sets the address of the venue.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVenue.FoursquareId">
            <summary>
            Gets or sets the Foursquare identifier of the venue if known (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVenue.Type">
            <summary>Gets the type of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultVideo">
            <summary>
            Represents a link to a page containing an embedded video player or a video file. By default, this
            video file will be sent by the user with an optional caption. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content
            instead of the video.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Caption">
            <summary>
            Gets or sets the caption of the video to be sent, 0-200 characters (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Description">
            <summary>
            Gets or sets a short description of the result (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Duration">
            <summary>
            Gets or sets a value indicating the video duration in seconds (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Height">
            <summary>Gets or sets the height of the video (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.MimeType">
            <summary>
            Gets or sets the mime type of the content of video url, "text/html" or "video/mp4". Use values from
            <see cref="T:Taikandi.Telebot.Types.MimeTypes" /> class.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.ThumbnailUrl">
            <summary>
            Gets or sets the URL of the thumbnail for the result either in <c>.jpeg</c> or <c>.gif</c> format.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Type">
            <summary>Gets or sets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Url">
            <summary>
            Gets or sets a valid URL for the embedded video player or video file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVideo.Width">
            <summary>Gets or sets the width of the video (Optional).</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InlineQueryResultVoice">
            <summary>
            Represents a link to a voice recording in an .ogg container encoded with OPUS. By default, this
            voice recording will be sent by the user. Alternatively, you can use
            <see cref="P:Taikandi.Telebot.Types.InlineQueryResult.MessageContent" /> to send a message with the specified content
            instead of the the voice message.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InlineQueryResult" />
            <remarks>
            This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore
            them.
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVoice.Duration">
            <summary>
            Gets or sets the recording duration in seconds (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVoice.Title">
            <summary>Gets or sets the recording title.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVoice.Type">
            <summary>Gets the type of the result.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InlineQueryResultVoice.Url">
            <summary>
            Gets or sets a valid URL for the voice recording.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InputContactMessageContent">
            <summary>
            Represents the content of a contact message to be sent as the result of an inline query.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputContactMessageContent.PhoneNumber">
            <summary>
            Gets or sets the contact's phone number.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputContactMessageContent.FirstName">
            <summary>
            Gets or sets the contact's first name.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputContactMessageContent.LastName">
            <summary>
            Gets or sets the contact's last name (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InputLocationMessageContent">
            <summary>
            Represents the content of a location message to be sent as the result of an inline query.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InputMessageContent" />
            <remarks>
            This will only work in Telegram versions released after 9 April, 2016. Older clients will ignore them.
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputLocationMessageContent.Latitude">
            <summary>
            Gets or sets the latitude of the location in degrees.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputLocationMessageContent.Longitude">
            <summary>
            Gets or sets the longitude of the location in degrees.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InputMessageContent">
            <summary>
            Represents an abstract class for the content of a message to be sent as a result of an inline query.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InputTextMessageContent">
            <summary>
            Represents the content of a text message to be sent as the result of an inline query.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InputMessageContent" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InputTextMessageContent.MessageText">
            <summary>
            Gets or sets the text of the message to be sent, 1-4096 characters.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputTextMessageContent.ParseMode">
            <summary>
            Gets or sets the method that Telegram should send the content to the Telegram clients. 
            Use <see cref="T:ParseMode.Markdown"/>, if you want Telegram apps to show bold, italic, fixed-width text or 
            inline URLs in your bot's message.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputTextMessageContent.DisableWebPagePreview">
            <summary>
            Gets or sets a value indicating whether to disables link previews for links in the sent message.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.InputVenueMessageContent">
            <summary>
            Represents the content of a venue message to be sent as the result of an inline query.
            </summary>
            <seealso cref="T:Taikandi.Telebot.Types.InputMessageContent" />
        </member>
        <member name="P:Taikandi.Telebot.Types.InputVenueMessageContent.Address">
            <summary>Gets or sets the address of the venue</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputVenueMessageContent.FoursquareId">
            <summary>
            Gets or sets the Foursquare identifier of the venue, if known.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.InputVenueMessageContent.Name">
            <summary>Gets or sets the name of the venue.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.KeyboardButton">
            <summary>
            Represents one button of the reply keyboard. For simple text buttons <see cref="T:System.String" />s can be
            used instead of this object to specify text of the button. Optional fields are mutually exclusive.
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Types.KeyboardButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.Types.KeyboardButton" /> class.
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Types.KeyboardButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.Types.KeyboardButton" /> class.
            </summary>
            <param name="text">The text of the button.</param>
        </member>
        <member name="P:Taikandi.Telebot.Types.KeyboardButton.RequestContact">
            <summary>
            Gets or sets a value indicating whether the user's phone number will be sent as a contact when the
            button is pressed. Available in private chats only (optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.KeyboardButton.RequestLocation">
            <summary>
            Gets or sets a value indicating whether the user's current location will be sent when the button is
            pressed. Available in private chats only (optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.KeyboardButton.Text">
            <summary>
            Gets or sets the text of the button. If none of the optional fields are used, it will be sent to
            the bot as a message when the button is pressed.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Location">
            <summary>This object represents a point on the map.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Location.Latitude">
            <summary>Gets or sets th latitude as defined by sender</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Location.Longitude">
            <summary>Gets or sets the longitude as defined by sender</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Message">
            <summary>This object represents a message.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Audio">
            <summary>
            Gets or sets the information about the file if the message is an audio file (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Caption">
            <summary>Gets or sets the caption of the photo or video.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.ChannelChatCreated">
            <summary>
            Gets or sets a value indicating whether the channel has been created. This is an optional service
            message.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Chat">
            <summary>
            Gets or sets the conversation the message belongs to.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Contact">
            <summary>
            Gets or sets the information about the contact if the message is a shared contact (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Date">
            <summary>Gets or sets the date the message was sent.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.DeleteChatPhoto">
            <summary>
            Gets or sets a value indicating whether the group photo is deleted.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Document">
            <summary>
            Gets or sets the information about the file if the message is a general file (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Entities">
            <summary>
            Gets or sets the special entities like usernames, URLs, bot commands, etc. for text messages that
            appear in the text.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.ForwardDate">
            <summary>
            Gets or sets the date the original message was sent for forwarded messages (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.ForwardFrom">
            <summary>
            Gets or sets the sender of the original message for forwarded messages (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.From">
            <summary>Gets or sets the sender.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.GroupChatCreated">
            <summary>
            Gets or sets a value indicating whether the group is created.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Id">
            <summary>Gets or sets the unique message identifier</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.LeftChatMember">
            <summary>
            Gets or sets the information about the member (which might be a bo itself) removed from the group
            (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Location">
            <summary>
            Gets or sets the information about the location if the message is a shared location (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.MigrateFromChatId">
            <summary>
            Gets or sets the supergroup identifier that the group has been migrated to (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.MigrateToChatId">
            <summary>
            Gets or sets the supergroup identifier to migrate the group to (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.NewChatMember">
            <summary>
            Gets or sets the information about the new member (which might be a bo itself) added to the group
            (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.NewChatPhoto">
            <summary>Gets or sets the group new photo (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.NewChatTitle">
            <summary>
            Gets or sets the value of the group new title (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Photos">
            <summary>
            Gets or sets the available sizes of the photo if the message is a photo (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.PinnedMessage">
            <summary>
            Gets or sets the pinned message. Note that the <see cref="T:Taikandi.Telebot.Types.Message" /> object in this field will not
            contain further
            <see cref="P:Taikandi.Telebot.Types.Message.ReplyToMessage" /> fields even if it is itself a reply.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.ReplyToMessage">
            <summary>
            Gets or sets the original message for replies.
            <para>
            Note that the Message object in this field will not contain further reply_to_message fields even if
            it itself is a reply.
            </para>
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Sticker">
            <summary>
            Gets or sets the information about the sticker if the message is a sticker (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.SupergroupChatCreated">
            <summary>
            Gets or sets a value indicating whether the supergroup has been created. This is an optional
            service message.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Text">
            <summary>
            Gets or sets the actual UTF-8 text of the message for the text messages (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Type">
            <summary>Gets the type of message.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Venue">
            <summary>
            Gets or sets the information about the venue if this message is a venue (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Video">
            <summary>
            Gets or sets the information about the video if message is a video (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Message.Voice">
            <summary>
            Gets or sets the information about the file if the message is a voice message (Optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.MessageEntity">
            <summary>
            Represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.MessageEntity.Length">
            <summary>
            Gets or sets the length of the entity in UTF-16 code units.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.MessageEntity.Offset">
            <summary>
            Gets or sets the offset in UTF-16 code units to the start of the entity.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.MessageEntity.Type">
            <summary>
            Gets or sets the type of the entity. One of mention (@username), hashtag, bot_command, url, email,
            bold (bold text), italic (italic text), code (monowidth string), pre (monowidth block), text_link
            (for clickable text URLs).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.MessageEntity.Url">
            <summary>
            Gets or sets the URL that will be opened after user taps on the text. For "text_link" only.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.MessageType">
            <summary>Provides available message types.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Unknown">
            <summary>
            Indicates the message type is unknown.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Text">
            <summary>Indicates that the message is a text message.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Sticker">
            <summary>Indicates that the message is a sticker.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Photo">
            <summary>Indicates that the message is a photo message.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Audio">
            <summary>Indicates that the message is an audio message.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Voice">
            <summary>Indicates that the message is a voice message.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Video">
            <summary>Indicates that the message is a video message.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Document">
            <summary>Indicates that the message contains a document.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Location">
            <summary>Indicates that the message is a location.</summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.MessageType.Contact">
            <summary>
            Indicates that the message is a contact information.
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Types.MimeTypes.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.Types.MimeTypes" /> class.
            </summary>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:Taikandi.Telebot.Types.MimeTypes.op_Implicit(Taikandi.Telebot.Types.MimeTypes)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Taikandi.Telebot.Types.MimeTypes" /> to <see cref="T:System.String" />.
            </summary>
            <param name="a">The <see cref="T:Taikandi.Telebot.Types.MimeTypes" /> to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Taikandi.Telebot.Types.MimeTypes.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />.
            </summary>
            <returns>
            true if the specified object  is equal to the current object; otherwise, false.
            </returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:Taikandi.Telebot.Types.MimeTypes.Equals(Taikandi.Telebot.Types.MimeTypes)">
            <summary>
            Determines whether the specified <see cref="T:Taikandi.Telebot.Types.MimeTypes" /> is equal to the current
            <see cref="T:Taikandi.Telebot.Types.MimeTypes" />.
            </summary>
            <returns>
            <c>true</c> if the specified <see cref="T:Taikandi.Telebot.Types.MimeTypes" /> is equal to the current instance; otherwise,
            <c>false</c>.
            </returns>
            <param name="other">
            The <see cref="T:Taikandi.Telebot.Types.MimeTypes" /> to compare with the current instance.
            </param>
        </member>
        <member name="M:Taikandi.Telebot.Types.MimeTypes.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>
            A hash code for the current <see cref="T:System.Object" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Types.MimeTypes.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Taikandi.Telebot.Types.PhotoSize">
            <summary>
            This object represents one size of a photo or a <see cref="T:Taikandi.Telebot.Types.Document" /> / <see cref="T:Taikandi.Telebot.Types.Sticker" />
            thumbnail.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.PhotoSize.FileId">
            <summary>Gets or sets the unique identifier for this file</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.PhotoSize.FileSize">
            <summary>Gets or sets the size of the file (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.PhotoSize.Height">
            <summary>Gets or sets the photo height.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.PhotoSize.Width">
            <summary>Gets or sets the photo width.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.ReplyKeyboardHide">
            <summary>
            Upon receiving a message with this object, Telegram clients will hide the current custom keyboard
            and display the default letter-keyboard. By default, custom keyboards are displayed until a new
            keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately
            after the user presses a button. See also <seealso cref="T:Taikandi.Telebot.Types.ReplyKeyboardMarkup" />.
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Types.ReplyKeyboardHide.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.Types.ReplyKeyboardHide" /> class.
            </summary>
            <param name="hideKeyboard">
            if set to <c>true</c> requests clients to hide the custom keyboard. Defaults to <c>true</c>.
            </param>
            <param name="selective">
            if set to <c>true</c> hides custom keyboard for specific users only. Defaults to <c>true</c>.
            </param>
        </member>
        <member name="P:Taikandi.Telebot.Types.ReplyKeyboardHide.HideKeyboard">
            <summary>
            Gets or sets a value indicating whether to request clients to hide the custom keyboard.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ReplyKeyboardHide.Selective">
            <summary>
            Gets or sets a value indicating whether you want to hide keyboard for specific users only
            (Optional).
            <para>
            Use this parameter if you want to hide keyboard for specific users only. Targets: 1) users that are
            @mentioned in the text of the Message object; 2) if the bot's message is a reply (has
            reply_to_message_id), sender of the original message. Example: A user votes in a poll, bot returns
            confirmation message in reply to the vote and hides keyboard for that user, while still showing the
            keyboard with poll options to users who haven't voted yet.
            </para>
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.ReplyKeyboardMarkup">
            <summary>
            This object represents a custom keyboard with reply options. See Introduction to bots for details
            and examples at https://core.telegram.org/bots#keyboards.
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Types.ReplyKeyboardMarkup.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Taikandi.Telebot.Types.ReplyKeyboardMarkup" /> class.
            </summary>
            <param name="oneTimeKeyboard">
            If set to <c>true</c> requests clients to hide the keyboard as soon as it's been used. Defaults to
            <c>false</c>.
            </param>
            <param name="selective">
            If set to <c>true</c> hides custom keyboard for specific users only. Defaults to <c>true</c>.
            </param>
        </member>
        <member name="P:Taikandi.Telebot.Types.ReplyKeyboardMarkup.Keyboard">
            <summary>
            Gets or sets an array of button rows, each represented by an array of <see cref="T:Taikandi.Telebot.Types.KeyboardButton"/>s.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ReplyKeyboardMarkup.OneTimeKeyboard">
            <summary>
            Gets or sets a value indicating whether to requests clients to hide the keyboard as soon as it's
            been used. Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ReplyKeyboardMarkup.ResizeKeyboard">
            <summary>
            Gets or sets a value indicating whether to Requests clients to resize the keyboard vertically for
            optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to
            <c>false</c>, in which case the custom keyboard is always of the same height as the app's standard
            keyboard.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.ReplyKeyboardMarkup.Selective">
            <summary>
            Gets or sets a value indicating whether you want to show the keyboard to specific users only.
            <para>
            Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is
            a reply (has reply_to_message_id), sender of the original message. Example: A user requests to
            change the bot‘s language, bot replies to the request with a keyboard to select the new language.
            Other users in the group don’t see the keyboard.
            </para>
            </summary>
        </member>
        <member name="M:Taikandi.Telebot.Types.ReplyKeyboardMarkup.CreateReplyKeyboardMarkup(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:Taikandi.Telebot.Types.ReplyKeyboardMarkup" /> filled with the specified
            <paramref name="keyboardTitles" />.
            </summary>
            <param name="keyboardTitles">The titles of each keyboard button.</param>
            <param name="oneTimeKeyboard">
            If set to <c>true</c> requests clients to hide the keyboard as soon as it's been used. Defaults to
            <c>true</c>.
            </param>
            <param name="selective">
            If set to <c>true</c> hides custom keyboard for specific users only. Defaults to <c>true</c>.
            </param>
            <returns>
            A <see cref="T:Taikandi.Telebot.Types.ReplyKeyboardMarkup" /> filled with the specified <paramref name="keyboardTitles" />.
            </returns>
        </member>
        <member name="M:Taikandi.Telebot.Types.ReplyKeyboardMarkup.CreateReplyKeyboardMarkup(System.Collections.Generic.IEnumerable{Taikandi.Telebot.Types.KeyboardButton},System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="T:Taikandi.Telebot.Types.ReplyKeyboardMarkup" /> filled with the specified
            <paramref name="keyboardButtons" />.
            </summary>
            <param name="keyboardButtons">The keyboard buttons.</param>
            <param name="oneTimeKeyboard">
            If set to <c>true</c> requests clients to hide the keyboard as soon as it's been used. Defaults to
            <c>true</c>.
            </param>
            <param name="selective">
            If set to <c>true</c> hides custom keyboard for specific users only. Defaults to <c>true</c>.
            </param>
            <returns>
            A <see cref="T:Taikandi.Telebot.Types.ReplyKeyboardMarkup" /> filled with the specified <paramref name="keyboardButtons" />.
            </returns>
        </member>
        <member name="T:Taikandi.Telebot.Types.Sticker">
            <summary>This object represents a sticker.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Sticker.FileId">
            <summary>
            Gets or sets the unique identifier for this file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Sticker.FileSize">
            <summary>Gets or sets the file size (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Sticker.Height">
            <summary>Gets or sets the sticker height.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Sticker.Thumb">
            <summary>
            Gets or sets the sticker thumbnail in .webp or .jpg format.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Sticker.Width">
            <summary>Gets or sets the sticker width.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Update">
            <summary>Represents an incoming update.</summary>
            <remarks>
            Only one of the optional parameters can be present in any given update.
            </remarks>
        </member>
        <member name="P:Taikandi.Telebot.Types.Update.CallbackQuery">
            <summary>
            Gets or sets the new incoming callback query (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Update.ChosenInlineResult">
            <summary>
            Gets or sets the result of an inline query that was chosen by a user and sent to their chat partner
            (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Update.Id">
            <summary>
            Gets or sets the update‘s unique identifier.
            <para>
            Update identifiers start from a certain positive number and increase sequentially. This ID becomes
            especially handy if you’re using Webhooks, since it allows you to ignore repeated updates or to
            restore the correct update sequence, should they get out of order.
            </para>
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Update.InlineQuery">
            <summary>
            Gets or sets the new incoming inline query (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Update.Message">
            <summary>
            Gets or sets the new incoming message of any kind - <see cref="F:Taikandi.Telebot.Types.MessageType.Text" />,
            <see cref="F:Taikandi.Telebot.Types.MessageType.Photo" />, <see cref="F:Taikandi.Telebot.Types.MessageType.Sticker" />, etc (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Update.Type">
            <summary>Gets the type of this update.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.UpdateType">
            <summary>
            Provides available types of an update.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.UpdateType.Message">
            <summary>
            Indicates that the received update is a <see cref="F:Taikandi.Telebot.Types.UpdateType.Message"/>.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.UpdateType.InlineQuery">
            <summary>
            Indicates that the received update is a type of <see cref="F:Taikandi.Telebot.Types.UpdateType.InlineQuery"/>.
            </summary>
        </member>
        <member name="F:Taikandi.Telebot.Types.UpdateType.ChosenInlineResult">
            <summary>
            Indicates that the received update is a result of an inline query that was chosen by a user and sent to their chat partner.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.User">
            <summary>This object represents a Telegram user or bot.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.User.FirstName">
            <summary>Gets or sets the User‘s or bot’s first name.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.User.Id">
            <summary>
            Gets or sets the unique identifier for this user or bot.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.User.LastName">
            <summary>
            Gets or sets the User‘s or bot’s last name (optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.User.Username">
            <summary>
            Gets or sets user‘s or bot’s username (optional).
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.UserProfilePhotos">
            <summary>This object represent a user's profile pictures.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.UserProfilePhotos.Photos">
            <summary>
            Gets or sets the requested profile pictures (in up to 4 sizes each).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.UserProfilePhotos.TotalCount">
            <summary>
            Gets or sets the total number of profile pictures the target user has.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Venue">
            <summary>Represents a venue.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Venue.Address">
            <summary>Gets or sets the address of the venue.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Venue.FoursquareId">
            <summary>
            Gets or sets the Foursquare identifier of the venue (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Venue.Location">
            <summary>Gets or sets the Venue location.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Venue.Title">
            <summary>Gets or sets the title of the result.</summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Video">
            <summary>This object represents a video file.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.Caption">
            <summary>
            Gets or sets the text description of the video (usually empty).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.Duration">
            <summary>
            Gets or sets the duration of the video in seconds as defined by sender.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.FileId">
            <summary>
            Gets or sets the unique identifier for this file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.FileSize">
            <summary>Gets or sets the file size (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.Height">
            <summary>
            Gets or sets the video height as defined by sender.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.MimeType">
            <summary>
            Gets or sets the MIME type of the file as defined by sender (Optional).
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.Thumb">
            <summary>Gets or sets the video thumbnail.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Video.Width">
            <summary>
            Gets or sets the video width as defined by sender.
            </summary>
        </member>
        <member name="T:Taikandi.Telebot.Types.Voice">
            <summary>This object represents a voice note.</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Voice.Duration">
            <summary>
            Gets or sets the duration of the audio in seconds as defined by sender.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Voice.FileId">
            <summary>
            Gets or sets the unique identifier for this file.
            </summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Voice.FileSize">
            <summary>Gets or sets the file size (Optional).</summary>
        </member>
        <member name="P:Taikandi.Telebot.Types.Voice.MimeType">
            <summary>
            Gets or sets the MIME type of the file as defined by sender (Optional).
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage.
            </summary>
            <example>
            <code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>.
            </summary>
            <example>
            <code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.ItemNotNullAttribute">
            <summary>
            Indicates that collection or enumerable value does not contain null elements.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.ItemCanBeNullAttribute">
            <summary>
            Indicates that collection or enumerable value can contain null elements.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" />-like form.
            </summary>
            <example>
            <code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code>
            </example>
        </member>
        <member name="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:JetBrains.Annotations.StringFormatMethodAttribute"/> class. 
            The string format method attribute.
            </summary>
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:JetBrains.Annotations.ValueProviderAttribute">
            <summary>
            For a parameter that is expected to be one of the limited set of values.
            Specify fields of which type should be used as values for this parameter.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException" />.
            </summary>
            <example>
            <code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute">
            <summary>
            Indicates that the method is contained in a type that implements
            <c>System.ComponentModel.INotifyPropertyChanged</c> interface and this method
            is used to notify that some property value changed.
            </summary>
            <remarks>
            The method should be non-static and conform to one of the supported signatures:
            <list>
            <item>
            <c>NotifyChanged(string)</c>
            </item>
            <item>
            <c>NotifyChanged(params string[])</c>
            </item>
            <item>
            <c>NotifyChanged{T}(Expression{Func{T}})</c>
            </item>
            <item>
            <c>NotifyChanged{T,U}(Expression{Func{T,U}})</c>
            </item>
            <item>
            <c>SetProperty{T}(ref T, T, string)</c>
            </item>
            </list>
            </remarks>
            <example>
            <code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
            Examples of generated notifications:
            <list>
            <item>
            <c>NotifyChanged("Property")</c>
            </item>
            <item>
            <c>NotifyChanged(() =&gt; Property)</c>
            </item>
            <item>
            <c>NotifyChanged((VM x) =&gt; x.Property)</c>
            </item>
            <item>
            <c>SetProperty(ref myField, value, "Property")</c>
            </item>
            </list>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output.
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br />
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br />
            <c>canbenull</c> annotation is only applicable for output parameters.<br />
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br />
            </syntax>
            <examples>
            <list>
            <item>
            <code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code>
            </item>
            <item>
            <code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code>
            </item>
            <item>
            <code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code>
            </item>
            <item>
            <code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code>
            </item>
            <item>
            <code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code>
            </item>
            </list>
            </examples>
        </member>
        <member name="T:JetBrains.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not.
            </summary>
            <example>
            <code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example>
            <code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example>
            <code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be marked as unused (as well as by other usage inspections).
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper to not mark symbols marked with such attributes
            as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used.</summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member.</summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type.</summary>
        </member>
        <member name="T:JetBrains.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked
            with <see cref="T:JetBrains.Annotations.MeansImplicitUseAttribute" /> or <see cref="T:JetBrains.Annotations.UsedImplicitlyAttribute" />.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used.</summary>
        </member>
        <member name="F:JetBrains.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used.</summary>
        </member>
        <member name="T:JetBrains.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled when the invoked method is on stack.
            If the parameter is a delegate, indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated while the method is executed.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>.
            </summary>
            <example>
            <code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~).
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.SourceTemplateAttribute">
            <summary>
            An extension method marked with this attribute is processed by ReSharper code completion
            as a 'Source Template'. When extension method is completed over some expression, it's source code
            is automatically expanded like a template at call site.
            </summary>
            <remarks>
            Template method body can contain valid source code and/or special comments starting with '$'.
            Text inside these comments is added as source code when the template is applied. Template parameters
            can be used either as additional method parameters or as identifiers wrapped in two '$' signs.
            Use the <see cref="T:JetBrains.Annotations.MacroAttribute" /> attribute to specify macros for parameters.
            </remarks>
            <example>
            In this example, the 'forEach' method is a source template available over all values
            of enumerable types, producing ordinary C# 'foreach' statement and placing caret inside block:
            <code>
            [SourceTemplate]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; xs) {
              foreach (var x in xs) {
                 //$ $END$
              }
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.MacroAttribute">
            <summary>
            Allows specifying a macro for a parameter of a <see cref="T:JetBrains.Annotations.SourceTemplateAttribute">source template</see>.
            </summary>
            <remarks>
            You can apply the attribute on the whole method or on any of its additional parameters. The macro expression
            is defined in the <see cref="P:JetBrains.Annotations.MacroAttribute.Expression" /> property. When applied on a method, the target
            template parameter is defined in the <see cref="P:JetBrains.Annotations.MacroAttribute.Target" /> property. To apply the macro silently
            for the parameter, set the <see cref="P:JetBrains.Annotations.MacroAttribute.Editable" /> property value = -1.
            </remarks>
            <example>
            Applying the attribute on a source template method:
            <code>
            [SourceTemplate, Macro(Target = "item", Expression = "suggestVariableName()")]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; collection) {
              foreach (var item in collection) {
                //$ $END$
              }
            }
            </code>
            Applying the attribute on a template method parameter:
            <code>
            [SourceTemplate]
            public static void something(this Entity x, [Macro(Expression = "guid()", Editable = -1)] string newguid) {
              /*$ var $x$Id = "$newguid$" + x.ToString();
              x.DoSomething($x$Id); */
            }
            </code>
            </example>
        </member>
        <member name="P:JetBrains.Annotations.MacroAttribute.Editable">
            <summary>
            Allows specifying which occurrence of the target parameter becomes editable when the template is deployed.
            </summary>
            <remarks>
            If the target parameter is used several times in the template, only one occurrence becomes editable;
            other occurrences are changed synchronously. To specify the zero-based index of the editable occurrence,
            use values >= 0. To make the parameter non-editable when the template is expanded, use -1.
            </remarks>
            >
        </member>
        <member name="P:JetBrains.Annotations.MacroAttribute.Expression">
            <summary>
            Allows specifying a macro that will be executed for a <see cref="T:JetBrains.Annotations.SourceTemplateAttribute">source template</see>
            parameter when the template is expanded.
            </summary>
        </member>
        <member name="P:JetBrains.Annotations.MacroAttribute.Target">
            <summary>
            Identifies the target parameter of a <see cref="T:JetBrains.Annotations.SourceTemplateAttribute">source template</see> if the
            <see cref="T:JetBrains.Annotations.MacroAttribute" /> is applied on a template method.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is
            an MVC controller. If applied to a method, the MVC controller name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, Object)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC
            partial view. If applied to a method, the MVC partial view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling inspections for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name.
            </summary>
            <example>
            <code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code>
            </example>
        </member>
        <member name="T:JetBrains.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.CollectionAccessAttribute">
            <summary>
            Indicates how method invocation affects content of the collection.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.CollectionAccessType.None">
            <summary>Method does not use or modify content of the collection.</summary>
        </member>
        <member name="F:JetBrains.Annotations.CollectionAccessType.Read">
            <summary>Method only reads content of the collection but does not modify it.</summary>
        </member>
        <member name="F:JetBrains.Annotations.CollectionAccessType.ModifyExistingContent">
            <summary>Method can change content of the collection but does not add new elements.</summary>
        </member>
        <member name="F:JetBrains.Annotations.CollectionAccessType.UpdatedContent">
            <summary>Method can add new elements to the collection.</summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if
            one of the conditions is satisfied. To set the condition, mark one of the parameters with
            <see cref="T:JetBrains.Annotations.AssertionConditionAttribute" /> attribute.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. The method itself should be
            marked by <see cref="T:JetBrains.Annotations.AssertionMethodAttribute" /> attribute. The mandatory argument of
            the attribute is the assertion type.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisfies the condition,
            then the execution continues. Otherwise, execution is assumed to be halted.
            </summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_TRUE">
            <summary>Marked parameter should be evaluated to true.</summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_FALSE">
            <summary>Marked parameter should be evaluated to false.</summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NULL">
            <summary>Marked parameter should be evaluated to null value.</summary>
        </member>
        <member name="F:JetBrains.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>Marked parameter should be evaluated to not null value.</summary>
        </member>
        <member name="T:JetBrains.Annotations.TerminatesProgramAttribute">
            <summary>
            Indicates that the marked method unconditionally terminates control flow execution.
            For example, it could unconditionally throw exception.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.LinqTunnelAttribute">
            <summary>
            Indicates that method is pure LINQ method, with postponed enumeration (like Enumerable.Select,
            .Where). This annotation allows inference of [InstantHandle] annotation for parameters
            of delegate type by analyzing LINQ method chains.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.NoEnumerationAttribute">
            <summary>
            Indicates that IEnumerable, passed as parameter, is not enumerated.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.RegexPatternAttribute">
            <summary>
            Indicates that parameter is regular expression pattern.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.XamlItemsControlAttribute">
            <summary>
            XAML attribute. Indicates the type that has <c>ItemsSource</c> property and should be treated
            as <c>ItemsControl</c>-derived type, to enable inner items <c>DataContext</c> type resolve.
            </summary>
        </member>
        <member name="T:JetBrains.Annotations.XamlItemBindingOfItemsControlAttribute">
            <summary>
            XAML attibute. Indicates the property of some <c>BindingBase</c>-derived type, that
            is used to bind some item of <c>ItemsControl</c>-derived type. This annotation will
            enable the <c>DataContext</c> type resolve for XAML bindings for such properties.
            </summary>
            <remarks>
            Property should have the tree ancestor of the <c>ItemsControl</c> type or
            marked with the <see cref="T:JetBrains.Annotations.XamlItemsControlAttribute" /> attribute.
            </remarks>
        </member>
        <member name="T:JetBrains.Annotations.NoReorder">
            <summary>
            Prevents the Member Reordering feature from tossing members of the marked class.
            </summary>
            <remarks>
            The attribute must be mentioned in your member reordering patterns
            </remarks>
        </member>
    </members>
</doc>
